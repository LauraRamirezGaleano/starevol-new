iso2d 02
  if ($?1 == 0) { define 1 ? { Variable name : psi, xlambda, Ucirc }}
  if ('$1' == 'x') {return}
  if ($?2 == 0) { define 2 ? { enter absolute structure star number}}
  if ('$2' == 'x') {return}
  # 1: variable (psi, xlambda, Ucirc)-- 2:model 
  set _nnsav = nn
  nn $2

  if ('$1' == 'xlambda') {
    define _var $var
    define var 2
  }
  
  if ($ierase == 1) {erase}
	
  # Smooth meridional circulation
  # May need some adjustments
  if ('$1' == 'Ucirc' || '$1' == 'Unorm')	{
    set CM = Ucirc_$2
    do i = 1,$($nshtot-1) {
    # remove inversion peak
    if (CM[$i]*CM[$i+1]<0 && CM[$i]*CM[$i-1]<0) {
      set CM[$i] = 0.5*(CM[$i-1]+CM[$i+1])
    }
    # remove too large variation of Ucirc
    set CM3 = CM
    if (CM[$i]!=0 && CM[$i+1]!=0 && CM[$i-1]!=0){
      if (abs(CM[$i]/CM[$i+1])>2 && abs(CM[$i]/CM[$i-1])>2) {
        set CM[$i] = 0.5*(CM[$i-1]+CM[$i+1])
      }
    }
    }
    smooth CM CM2 $(int($nshtot/20))
    set CM = (yzi_$2 < 0) ? 0 : CM2
    #set CM = (yzi == 0) ? CM2 : 0
    #smooth  Ucirc_$2 CM 50
    #set CM_$2 = C
    #set CM = Ucirc_$2

    # vitesse U_theta
    set Unorm_$2 = 0*Ucirc_$2
    set temp_$2 = rho_$2*r_$2**2*CM
    deriv temp r
    set Vcirc_$2 = 1/(6*rho_$2*r_$2+1E-30)*Dtemp_$2
    addvar Vcirc_$2
  }

  define Xstar $($var2d""_$2[$nshtot])  
  # Define image (need for contours plot)
  do i = 0,$dim1 {
    if ($i%10==1) {echo Build image upon var $1, seq: $i/$dim}
    define xx $($var2d""_$2[xx[$i]])
    do j = 0,$dim1 {
      define yy $($var2d""_$2[xx[$j]])
      define r $(sqrt($xx**2+$yy**2))
      
      if ($r>$Xstar) {
      # If r(X,Y) > Xstar => image set to the surface value
        set image[$i,$j] = $1""_$2[$nshtot]
      }\
      else {
        set temp = nsh_$2 if ($r < $var2d""_$2)
        define ind $(temp[0])
        if ($ind > $nshtot) {define ind $nshtot}
        if ('$1' == 'Ucirc') {
          # rho*r^2*U*1/2*(cos^3(theta)-cos(theta))
          define delta $(($var2d""_$2[$ind-1]-$r)/($var2d""_$2[$ind-1]-$var2d""_$2[$ind-2]))
          set CM_r = CM[$ind-1]*rho_$2[$ind-1]*($rsun*r_$2[$ind-1])**1*$delta
          set CM_r = CM_r+CM[$ind-2]*rho_$2[$ind-2]*($rsun*r_$2[$ind-2])**1*(1-$delta)
          set image[$i,$j] = 0.5*CM_r*((cos(atan($xx/$yy)))**3-cos(atan($xx/$yy)))
        }\
        else {
          if ('$1' == 'Unorm') {
            define theta $(asin($xx/$r))
            set image[$i,$j] = sqrt( (Ucirc_$2[$ind]*0.5*(3*cos($theta)**2-1))**2 + (Vcirc_$2[$ind]*(-1.5)*sin(2*$theta))**2)
          }\
          else {
            # [psi/xlambda]*P2(cos(theta))*[T/mu]
            if ('$1' == 'psi') {
              set image[$i,$j] = T_$2[$ind]*$1""_$2[$ind]*(1.5*(cos(atan($xx/$yy)))**2-0.5)
            }\
            else {
              if ('$1' == 'xlambda') {
                set image[$i,$j] = mu_$2[$ind]*$1""_$2[$ind]*(1.5*(cos(atan($xx/$yy)))**2-0.5)
              }\
              else {
                # other variable (V(r,theta) = V(r))
                set image[$i,$j] = $1_$2[$ind]
              }
            }   
          } 
        }
      }
    }
  }

	# define levels for contours line
  set dimen(Umax) = $dim
  set dimen(Umin) = $dim
  do i = 0,$dim1 {
    set temp = image[$i,*]
    sort <temp>
    set Umin[$i] = temp[0]
    set Umax[$i] = temp[$dim1]
  }
  sort <Umax>
  define mymax $(Umax[$dim1]) 
  sort <Umin>
  define mymin $(Umin[0])
  define l $($mymax*10**-$var)
  set levspos = $l
  while {$l < $mymax} {
    if ($l>$mymax/2) {
      define l ($l*1.001)
    } else { if ($l>$mymax/5) {
      define l $($l*1.005)
    } else { if ($l>$mymax/20) {
      define l $($l*1.01)
    } else {
      define l $($l*1.05)
    }}}
    set levspos = levspos concat < $l >
  }
  set levspos = reverse (levspos)
  define l $($mymin*10**-$var)
  set levsneg = $l
  while {$l > $mymin} {
    if ($l<$mymin/2) {
      define l ($l*1.001)
    } else { if ($l<$mymin/5) {
      define l $($l*1.005)
    } else { if ($l<$mymin/20) {
      define l $($l*1.01)
    } else {
      define l $($l*1.05)
    }}}
    set levsneg = levsneg concat < $l >
  }

  # set limits for contours plot
  # contour use 0 to dimen(image) for its plot instead of 0 to Rsurf
  limits 0 $(1.0*$dim) 0 $(1.0*$dim)

  # choose range red color for positive levels 
  define dimpos $(dimen(levspos)-1)
  lweight 4
  foreach l levspos {
    my_add_ctype 250 $((1-$l/$mymax)**$niso*255%256) 0 
    set le = $l
    levels le
    contour
  }
  
  # choose range blue color for negative value
  define dimneg $(dimen(levsneg)-1)
  foreach l levsneg {
    my_add_ctype 0 $((1-$l/$mymin)**$niso*255%256) 255
    set le = $l
    levels le
    contour
  }
  lweight 1
  ctype black
  #return

  #add black line in shade area case
  if ($dimpos>100) {
    set lev = $mymax*10**(-$var*do(1,10)/10)
    set lev = lev concat $mymin*10**(-$var*do(1,10)/10)
    levels lev
    contour
  }
	expand 1.0001

  # draw surface$var2d
  limits 0 $(1.0*$Xtot) 0 $(1.0*$Xtot)
  if ($Xtot == $var2d""_$2[$nshtot]) {
    set xxr = 0,99
    set xxr = xxr*$Xtot/99
    set yyr = sqrt($Xtot**2-xxr**2)
    connect xxr yyr
  }

  # find convective border
  nn $2
  deriv yzi nsh
  set Dyzi_$2 = -Dyzi_$2
  set temp = nsh_$2 if (Dyzi_$2 != 0)
  #set temp = temp-1

  #echo test
  #foreach sh temp {
  #  echo conv/rad border: $sh
  #}

  do i = 0,$(dimen(temp)-1) {
    define myr $($var2d""_$2[(temp[$i])])
    set xx$i = 0,$dim1
    set xx$i = xx$i*$myr/$dim1
    set yy$i = sqrt(abs($myr**2-xx$i**2))
    connect xx$i yy$i

    if (yzi_$2[0] < 0) {
      if ($i == 0) {
      # shade convective core
        angle 45
        set newX = < 0 > concat xx0 concat < 0 >
        set newY = < 0 > concat yy0 concat < 0 >
        shade 200 newX newY     
        angle 0
      }\
	    else {
      # shade convective zone (with conv. core)
        if ($i%2 == 0) {
          angle 45
          set myXX = xx$i
          set myYY = yy$i
          do j = 0,$dim1 {
            set myXX[$j] = xx$i[$dim1-$j]
            set myYY[$j] = yy$i[$dim1-$j]
          }
          set newX = myXX concat xx$($i-1)
          set newY = myYY concat yy$($i-1)
          shade 200 newX newY     
          angle 0
        }
      }
    }\
    else {
    # shade convective zone (without conv. core)
      if ($i%2 != 0) {
        angle 45
        set myXX = xx$i
        set myYY = yy$i
        do j = 0,$dim1 {
          set myXX[$j] = xx$i[$dim1-$j]
          set myYY[$j] = yy$i[$dim1-$j]
        }
        set newX = myXX concat xx$($i-1)
        set newY = myYY concat yy$($i-1)
        shade 200 newX newY     
        angle 0
      }
    }
  } 

  #set physical limits for drawing surface and convective zones 
  expand $myexpand
  box 1 2 4 4
  if ('$var2d' == 'r') {
    xlabel $var2d  (R_\odot)
    ylabel $var2d  (R_\odot)
  }\
  else {
    xlabel $var2d  (M_\odot)
    ylabel $var2d  (M_\odot)
  }
  set boxX = <0.60 0.60 0.96 0.96>   set boxX = boxX*$Xtot
  set boxY = <0.95 0.82 0.82 0.95>   set boxY = boxY*$Xtot
  ctype white
  shade 0 boxX boxY
  ctype black 
  relocate $(0.6*$Xtot) $(0.85*$Xtot)
  label $(lab$1[0])
  expand 1
  if ('$1' == 'xlambda') {
    define var $_var
  }
  set nn = _nnsav